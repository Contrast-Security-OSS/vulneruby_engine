version: '3'
services:
  passenger:
    build:
      dockerfile: docker/Dockerfile_passenger
      context: .
      args:
        port: 3008
    env_file:
      - ./docker/.env
    volumes:
      - ./run-data/passenger:/tmp/passenger
    ports:
      - "3008:3008"
  puma:
    build:
      dockerfile: docker/Dockerfile_puma
      context: .
      args:
        port: 3009
    env_file:
      - ./docker/.env
    volumes:
      - ./run-data/puma:/tmp/puma
    ports:
      - "3009:3009"
  thin:
    build:
      dockerfile: docker/Dockerfile_thin
      context: .
      args:
        port: 3010
    env_file:
      - ./docker/.env
    volumes:
      - ./run-data/thin:/tmp/thin
    ports:
      - "3010:3010"
  unicorn4:
    build:
      dockerfile: docker/Dockerfile_unicorn4
      context: .
      args:
        port: 3011
    env_file:
      - ./docker/.env
    volumes:
      - ./run-data/unicorn4:/tmp/unicorn4
    ports:
      - "3011:3011"
  unicorn5:
    build:
      dockerfile: docker/Dockerfile_unicorn5
      context: .
      args:
        port: 3012
    env_file:
      - ./docker/.env
    volumes:
      - ./run-data/unicorn5:/tmp/unicorn5
    ports:
      - "3012:3012"
  test_harness:
    build:
      dockerfile: docker/Dockerfile_testrunner
      context: .
    volumes:
      - ./run-data:/run-data
    environment:
      - TEST_HOSTS=passenger:3008,puma:3009,thin:3010,unicorn4:3011,unicorn5:3012 # Update this with the service name - the script parses this env var to iterate over test instances
      - DOCKER=true
    depends_on:
      - passenger
      - puma
      - thin
      - unicorn4
      - unicorn5
volumes:
  run-data: